---
title: "LDA / QDA Very Happiness"
format: html
embed-resources: true
---

# Packages

```{r}
#| label: importation des packages
set.seed(123)
library(tidyverse)
library(tidymodels)
library(discrim)
library(kableExtra)
library(recipes)
library(MASS) #Modélisation LDA/QDA
library(pROC)
library(kknn)
```

# Importation des données

```{r}
ID_v6 <- read_csv("D:/Université de Tours/Master MEcEn/S8/8-2 Classification supervisée/Projet HAPPINESS/R_ happiness_files/vhappy/vhappy.csv",
                  na = c("", "NA"))
ID_v6 <- ID_v6 %>% mutate(across(everything(), ~replace_na(.x, "NA")))
ID_v6 <- ID_v6 %>% mutate(across(where(is.character), as.factor))
```
# 10% de la data
```{r}
n <- nrow(ID_v6) #taille de la data
N <- round(1/5*n) # Taille de l'échantillon d'entrainement
train <- sample(1:n, size = N) # découpage de la data train
ID_v7 <- ID_v6 %>% slice(train)
```

# Echantillonage 

```{r}
set.seed(1)
split_dat <- initial_split(ID_v7, prop = 0.75, strata = vhappy) # classique 3 quart / 1 quart
dat_train <- training(split_dat)
data_test <- testing(split_dat)
```

## Construction des différents modèles

### Définition des modèles :

```{r}
#| label: Définition du modèle QDA

qda_mod <- discrim_quad() |> 
  set_mode("classification") |> 
  set_engine("MASS")
```

### recette à appliquer 

```{r}
dat_rec <- dat_train  %>% recipe(vhappy~.) %>% 
  step_normalize(all_numeric_predictors()) %>% 
# step_dummy(all_nominal_predictors()) %>% 
  step_other(all_nominal_predictors(), threshold = 0.05) %>% 
  step_zv(all_predictors()) %>% 
  step_corr(all_numeric_predictors(), threshold = 0.9)
```

```{r}
qda_wf <- workflow() |> 
  add_model(qda_mod) |> 
  add_recipe(dat_rec)
```

```{r}
qda_fit <- qda_wf |> fit(data = dat_train) #entrainement du modèle en fonction du workflow et par rapport à la data d'entrainement

qda_preds <- predict(qda_fit, new_data = data_test, type = "prob") #predit la data_test grâce aux données d'entrainements

qda_result <- bind_cols(data_test, qda_preds)
```

```{r}
qda_result |> roc_curve(vhappy, .pred_no) |> autoplot()
roc(data_test$vhappy, qda_result$.pred_no) %>% auc()
```

Si proche de la bissectrice, le hasard est aussi bon que le modèle.
